#!/usr/bin/env php
<?php

declare(ticks=30000);

namespace mpcmf\bin;

use mpcmf\system\application\applicationInstance;
use mpcmf\system\configuration\config;
use mpcmf\system\io\log;
$startTime = microtime(true);
$rootFile = '.mpcmfroot';

define('APP_NAME', 'mpcmf');

$appRoot = null;
$currentPath = __DIR__;
while (($parentPath = dirname($currentPath)) !== $currentPath) {
    $currentPath = $parentPath;
    if (in_array($rootFile, scandir($currentPath), true)) {
        $appRoot = $currentPath;
    }
}

if ($appRoot === null) {
    error_log("Unable to find project root (not found \"{$rootFile}\"), absolute root found: \"{$currentPath}\"");
    exit(1);
}

define('APP_ROOT', $appRoot);

$loader = APP_ROOT . '/loader.php';
if (file_exists($loader)) {
    require_once $loader;
} else {
    require_once APP_ROOT . '/vendor/autoload.php';
    require_once __DIR__ . '/../environment.php';
}

if(!isset($argv[1]) || empty($argv[1])) {
    echo "=== Error! ===\nUsage: " . basename(__FILE__) . " apps/application/console.php\n\n";
    exit(1);
}

$appPath = APP_ROOT . DIRECTORY_SEPARATOR . $argv[1];

$appName = basename($argv[1], '.php');

unset($argv[1]);
$argv = array_values($argv);
$_SERVER['argv'] = $argv;
$appFullClassPath = dirname(str_replace(APP_ROOT, APP_NAME, $appPath)) . DIRECTORY_SEPARATOR . $appName;
$appFullClass = str_replace(DIRECTORY_SEPARATOR, config::NAMESPACE_SEPARATOR, preg_replace('/\/vendor\/[^\/]+\/[^\/]+\/src/ui', '', $appFullClassPath));
if(!class_exists($appFullClass)) {
    echo "=== Error! ===\nApplication not found at {$appPath}\n\n";
    exit(1);
}

$application = applicationInstance::getInstance();
$application->setApplication(new $appFullClass());
$application->run();

if(log::factory()->isHandling(log::DEBUG)) {
    $period = microtime(true) - $startTime;
    echo "\n\n== DEBUG ==\n - total time: " . number_format($period, 4) . " seconds\n\n";
}